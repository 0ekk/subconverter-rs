name: Build and Release

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*'
  workflow_dispatch:

concurrency: 
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  linux_build:
    strategy:
      matrix:
        include:
          - arch: x86
            artifact: subconverter-linux-x86
            os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - arch: amd64
            artifact: subconverter-linux-amd64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - arch: armv7
            artifact: subconverter-linux-armv7
            os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
          - arch: aarch64
            artifact: subconverter-linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    name: Linux ${{ matrix.arch }} Build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Add commit id into version
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: |
        SHA=$(git rev-parse --short HEAD)
        VERSION=$(grep '^version' Cargo.toml | sed 's/.*"\(.*\)".*/\1/')
        sed -i "s/version = \"$VERSION\"/version = \"$VERSION-$SHA\"/" Cargo.toml
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev
    
    - name: Install cross
      run: cargo install cross
      
    - name: Build with cross
      run: cross build --release --target ${{ matrix.target }}
        
    - name: Prepare artifact
      run: |
        mkdir -p subconverter/
        cp target/${{ matrix.target }}/release/subconverter subconverter/
        cp -r base/* subconverter/
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: subconverter/
        
    - name: Package Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      run: tar czf ${{ matrix.artifact }}.tar.gz subconverter
      
    - name: Draft Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ matrix.artifact }}.tar.gz
        draft: true

  macos_build:
    strategy:
      matrix:
        include:
          - arch: x86_64
            artifact: subconverter-macos-x86_64
            os: macos-13
            target: x86_64-apple-darwin
          - arch: aarch64
            artifact: subconverter-macos-aarch64
            os: macos-14
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    name: macOS ${{ matrix.arch }} Build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Add commit id into version
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: |
        SHA=$(git rev-parse --short HEAD)
        VERSION=$(grep '^version' Cargo.toml | sed 's/.*"\(.*\)".*/\1/')
        sed -i -e "s/version = \"$VERSION\"/version = \"$VERSION-$SHA\"/" Cargo.toml
        
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Prepare artifact
      run: |
        mkdir -p subconverter/
        cp target/${{ matrix.target }}/release/subconverter subconverter/
        cp -r base/* subconverter/
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: subconverter/
        
    - name: Package Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      run: tar czf ${{ matrix.artifact }}.tar.gz subconverter
      
    - name: Draft Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ matrix.artifact }}.tar.gz
        draft: true
  
  windows_build:
    strategy:
      matrix:
        include:
          - arch: x86
            artifact: subconverter-windows-x86
            target: i686-pc-windows-msvc
          - arch: amd64
            artifact: subconverter-windows-amd64
            target: x86_64-pc-windows-msvc
    runs-on: windows-latest
    name: Windows ${{ matrix.arch }} Build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Add commit id into version
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      shell: bash
      run: |
        SHA=$(git rev-parse --short HEAD)
        VERSION=$(grep '^version' Cargo.toml | sed 's/.*"\(.*\)".*/\1/')
        sed -i "s/version = \"$VERSION\"/version = \"$VERSION-$SHA\"/" Cargo.toml
        
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Prepare artifact
      shell: bash
      run: |
        mkdir -p subconverter/
        cp target/${{ matrix.target }}/release/subconverter.exe subconverter/
        cp -r base/* subconverter/
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: subconverter/
        
    - name: Package Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      run: 7z a ${{ matrix.artifact }}.7z subconverter/
      
    - name: Draft Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ matrix.artifact }}.7z
        draft: true 