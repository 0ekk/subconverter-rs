name: Update Vercel and Netlify Projects

on:
  workflow_run:
    workflows: ["Build and Publish subconverter-wasm"]
    types:
      - completed
  workflow_dispatch:  # 允许手动触发
    inputs:
      version:
        description: '指定要使用的subconverter-wasm版本 (留空使用最新版)'
        required: false
        type: string

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
      
      - name: Get latest version
        id: version
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            # 使用指定的版本
            WASM_VERSION="${{ github.event.inputs.version }}"
            echo "Using specified version: $WASM_VERSION"
          else
            # 获取最新的稳定版本或beta版本
            STABLE_VERSION=$(npm view subconverter-wasm version 2>/dev/null || echo "none")
            BETA_VERSION=$(npm view subconverter-wasm dist-tags.beta 2>/dev/null || echo "none")
            
            if [[ "$STABLE_VERSION" != "none" ]]; then
              WASM_VERSION="$STABLE_VERSION"
              echo "Using latest stable version: $WASM_VERSION"
            elif [[ "$BETA_VERSION" != "none" ]]; then
              WASM_VERSION="$BETA_VERSION"
              echo "Using latest beta version: $WASM_VERSION (stable not available)"
            else
              echo "Error: Could not find any published versions"
              exit 1
            fi
          fi
          
          echo "WASM_VERSION=${WASM_VERSION}" >> $GITHUB_ENV
          echo "wasm_version=${WASM_VERSION}" >> $GITHUB_OUTPUT
      
      - name: Check current version in package.json
        id: check_version
        run: |
          cd vercel
          CURRENT_VERSION=$(node -p "try { require('./package.json').dependencies['subconverter-wasm'] } catch(e) { '' }")
          
          if [[ "$CURRENT_VERSION" == "^${{ env.WASM_VERSION }}" ]]; then
            echo "Current version is already up to date: $CURRENT_VERSION, no update needed."
            echo "SKIP_UPDATE=true" >> $GITHUB_ENV
          else
            echo "Current version: ${CURRENT_VERSION:-none}, will update to ^${{ env.WASM_VERSION }}"
            echo "SKIP_UPDATE=false" >> $GITHUB_ENV
          fi
      
      - name: Update package.json
        if: env.SKIP_UPDATE != 'true'
        run: |
          cd vercel
          # 使用jq更新package.json
          sudo apt-get update && sudo apt-get install -y jq
          
          jq --arg version "^${{ env.WASM_VERSION }}" '.dependencies["subconverter-wasm"] = $version' package.json > package.json.new
          
          if [ -s package.json.new ]; then
            mv package.json.new package.json
            echo "Updated package.json:"
            cat package.json | grep subconverter-wasm
          else
            echo "Error: Failed to update package.json"
            exit 1
          fi
      
      # 安装依赖并拷贝WASM文件
      - name: Install dependencies and copy WASM
        if: env.SKIP_UPDATE != 'true'
        run: |
          cd vercel
          pnpm install
          
          mkdir -p public
          cp -f node_modules/subconverter-wasm/subconverter_bg.wasm public/
          echo "Copied WASM file to public directory"
      
      # 为Netlify设置相同的依赖
      - name: Setup Netlify dependencies
        if: env.SKIP_UPDATE != 'true'
        run: |
          # 确保Netlify目录存在
          if [ -d "netlify" ]; then
            cd netlify
            
            # 使用jq更新package.json
            sudo apt-get update && sudo apt-get install -y jq
            
            jq --arg version "^${{ env.WASM_VERSION }}" '.dependencies["subconverter-wasm"] = $version' package.json > package.json.new
            
            if [ -s package.json.new ]; then
              mv package.json.new package.json
              echo "Updated Netlify package.json:"
              cat package.json | grep subconverter-wasm
              
              # 安装依赖
              pnpm install
              
              # 复制WASM文件到Netlify的public目录
              mkdir -p public
              cp -f node_modules/subconverter-wasm/subconverter_bg.wasm public/
              echo "Copied WASM file to Netlify public directory"
            else
              echo "Error: Failed to update Netlify package.json"
              exit 1
            fi
          else
            echo "Netlify directory not found, skipping Netlify setup"
          fi
      
      # 创建PR更新依赖
      - name: Create Pull Request
        if: env.SKIP_UPDATE != 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Update subconverter-wasm to version ${{ env.WASM_VERSION }}"
          title: "Update subconverter-wasm to version ${{ env.WASM_VERSION }}"
          body: |
            This PR updates subconverter-wasm dependency to version ${{ env.WASM_VERSION }}.
            
            - Updated package.json in Vercel project
            - Copied WASM file to public directory
            - Updated Netlify dependencies (if applicable)
            
            This update was automatically generated by the GitHub Actions workflow.
          branch: update-wasm-${{ env.WASM_VERSION }}
          delete-branch: true
          base: main
          path: .
      
      - name: Notify on Success
        run: |
          if [[ "${{ env.SKIP_UPDATE }}" == "true" ]]; then
            echo "✅ No update needed, current version is already up to date."
          else
            echo "✅ Created PR to update subconverter-wasm to version ${{ env.WASM_VERSION }}."
          fi 